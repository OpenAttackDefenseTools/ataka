import os
import typer

from player_cli.cmd_exploit import app
import player_cli.util
from player_cli.util import make_executable, ERROR_STR, WARN_STR


@app.command('template', help='Generate an exploit stub from a template.')
def exploit_template(
    template: str = typer.Argument(..., help=
        'Template to use, one of: python, ubuntu. '
        'Optionally, you can specify a Docker tag (e.g., python:3.9-slim). '
        'If none is specified, the latest will be used.'),
    path: str = typer.Argument(..., help='Destination directory.'),
    overwrite: bool = typer.Option(False, '--overwrite', help=
        'Proceed even if the destination directory already exists.')
):

    files = {}
    exes = set()
    if template == 'python' or template.startswith('python:'):
        image = 'python:latest' if template == 'python' else template

        files['Dockerfile'] = player_cli.util.load_template_file(
            'templates/python/Dockerfile.template', {"image": image}
        )
        files['exploit.py'] = player_cli.util.load_template_file(
            'templates/python/exploit.py.template', {}
        )
        files["requirements.txt"] = player_cli.util.load_template_file(
            'templates/python/requirements.txt.template', {}
        )

        exes.add('exploit.py')

    elif template == 'ubuntu' or template.startswith('ubuntu:'):
        image = 'ubuntu:latest' if template == 'ubuntu' else template
        
        files['Dockerfile'] = player_cli.util.load_template_file(
            'templates/ubuntu/Dockerfile.template', {"image": image}
        )
        files['exploit.sh'] = player_cli.util.load_template_file(
            'templates/ubuntu/exploit.sh.template', {"TARGET_IP": "1.1.1.1"}
        )

        exes.add('exploit.sh')
    else:
        msg = f'unknown template "{template}"'
        raise typer.BadParameter(msg, param_hint='TEMPLATE')

    try:
        os.mkdir(path)
    except FileExistsError:
        if overwrite:
            typer.echo(f'{WARN_STR}: directory "{path}" already exists (proceeding anyway)')
        else:
            typer.echo(f'{ERROR_STR}: directory "{path}" already exists (use --overwrite to proceed anyway)')
            raise typer.Exit(code=1)

    for name, contents in files.items():
        file_path = os.path.join(path, name)
        with open(file_path, 'wb') as f:
            if isinstance(contents, str):
                contents = contents.encode()
            f.write(contents)
        if name in exes:
            make_executable(file_path)
